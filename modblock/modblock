#!/bin/bash
#Install by "sudo cp modblock /usr/sbin;sudo touch /etc/modprobe.d/blacklist"

if [ "$1" != "b" ] && [ "$1" != "block" ] && [ "$1" != "a" ] && [ "$1" != "allow" ] && [ "$1" != "l" ] && [ "$1" != "list" ]
then
	echo '''
 Kernel Module Blocker for Unix-like systems (Now Debian Only)
  You can use this script to block any kernel module.
  It -Simply- add it to the blacklist, And removes it when you "allow" it.
  Usage:
	b, block [mod] #to block any module
	a, allow [mod] #to allow any blocked module
	l, list        #to list all "Modules on System" and "Blocked Modules"
	l, list line   #to list all modules like previous but per line
	any thing else #to show this help ;)		
'''
fi

blst='/etc/modprobe.d/blacklist'

if [ "$1" == "l" ] || [ "$1" == "list" ]
then
	modsys=`lsmod|grep -v Module|sed 's/[ ].*//'`
	blkmod=`sed 's/.*[ ]//' $blst`
	echo "Modules on System:"
	if [ "$2" == "line" ];then
		for i in $modsys;do echo $i;done
	else
		echo $modsys
	fi
	echo
	echo "Blocked Modules:"
	if [ "$blkmod" == "" ]
	then
		echo "  No modules were blocked"
	else
		if [ "$2" == "line" ];then
			for i in $blkmod;do echo $i;done
		else
			echo $blkmod
		fi
	fi
else
	arr=( $@ )
	for a in ${arr[@]:1}
	do		
		found=`lsmod|grep $a` #In Modules
		inbls=`cat $blst|grep $a` #In Blacklist

		if [ "$1" == "b" ] || [ "$1" == "block" ]	
		then
			if [ "$found" == "" ];then
				echo "$a is not found on system"
			elif [ "$inbls" != "" ];then
				echo "$a is already blocked"
			elif [ "$a" == "" ];then
				echo "Nothing to block"
			else
				echo "blacklist" $a >> "$blst"
				echo "blocked $a"
			fi
		elif [ "$1" == "a" ] || [ "$1" == "allow" ]
		then
			if [ "$found" == "" ];then
				echo "$a is not found on system"
			elif [ "$inbls" == "" ];then
				echo "$a is not blocked"
			elif [ "$a" == "" ];then
				echo "Nothing to block"
			else
				sed "/$a/d" $blst > ${blst}.save
				mv ${blst}.save ${blst}
				echo "allowed $a"
			fi

		fi
	done
fi
exit