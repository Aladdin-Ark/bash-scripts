#!/bin/bash
#Install by "sudo cp modblock2 /usr/sbin;sudo touch /etc/modprobe.d/blacklist"

if [ "$1" != "-b" ] && [ "$1" != "-a" ] && [ "$1" != "-l" ] && [ "$1" != "-ll" ] && [ "$1" != "-i" ]
then
	echo '''
 Kernel Module Blocker for Unix-like systems (Now Debian Only)
  You can use this script to block any kernel module.
  It -Simply- add it to the blacklist, And removes it when you "allow" it.
  Usage:
	-b  [mod] #to block any module
	-a  [mod] #to allow any blocked module
	-l        #to list all "Modules on System" and "Blocked Modules"
	-ll       #like previous but every module per line
	-i        #to install this application to your system
	any thing else #to show this help ;)		
'''
exit
fi

blst='/etc/modprobe.d/blacklist'
touch $blst

function list {
	
	echo "Modules on System:"
	if [ "$1" == "line" ];then
		lsmod|grep -v Module|sed 's/[ ].*//'
	else
		modsys=`lsmod|grep -v Module|sed 's/[ ].*//'`;echo $modsys
	fi
	
	echo
	echo "Blocked Modules:"
	if [ "$1" == "line" ];then
		sed 's/.*[ ]//' $blst
	else
		blkmod=`sed 's/.*[ ]//' $blst`;echo $blkmod
	fi

}
for a in $@
do
	if [ "$a" == "-b" ]
	then
		case="block"
		continue
	elif [ "$a" == "-a" ]
	then
		case="allow"
		continue
	elif [ "$a" == "-l" ]
	then
		list
		continue
	elif [ "$a" == "-ll" ]
	then
		list line
		continue
	elif [ "$a" == "-i" ]
	then
		cp $0 /usr/sbin
		app=`echo $0|sed 's/.*\///'`
		chmod 0500 $app &>/dev/null
		echo "ModuleBlocker Installed"
		continue
	fi

	found=`lsmod|grep $a` #In Modules
	inbls=`cat $blst|grep $a` #In Blacklist

	if [ "$case" == "block" ]
	then
		if [ "$found" == "" ];then
			echo "$a is not found on system"
		elif [ "$inbls" != "" ];then
			echo "$a is already blocked"
		elif [ "$a" == "" ];then
			echo "Nothing to block"
		else
			echo "blacklist" $a >> "$blst"		
			echo "blocked $a"
		fi
	elif [ "$case" == "allow" ]
	then
		if [ "$found" == "" ];then
			echo "$a is not found on system"
		elif [ "$inbls" == "" ];then
			echo "$a is not blocked"
		elif [ "$a" == "" ];then
			echo "Nothing to allow"
		else
			sed "/$a/d" $blst > ${blst}.save
			mv ${blst}.save ${blst}
			echo "allowed $a"
		fi

	fi
done
exit